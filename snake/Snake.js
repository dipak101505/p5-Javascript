function Snake(){
	this.x=0;
	this.y=0;
	this.speedx=1;
	this.speedy=0;
	this.total=1;
	this.trace=[];
	this.trace.push(createVector(this.x,this.y));
	this.dir=function(x,y){
		if(x==this.speedx*-1||y==this.speedy*-1)
			return;
		this.speedx=x;
		this.speedy=y;
	}
	this.update=function()
	{
		this.x=this.x+this.speedx*10;
		this.y=this.y+this.speedy*10;
		var flag=false;
		//console.log(dist(this.trace[0].x,this.trace[0].y,food.x,food.y));
		if(dist(this.x,this.y,food.x,food.y)<10)
		{
			currScore+=50;
			food=createVector(random(width),random(height));
			this.total++;
			if(this.total-2>=0)
			this.trace.push(createVector(this.trace[this.total-2].x,this.trace[this.total-2].y))
			flag=true;
		}
		if(this.x>width||this.x<0||this.y>height||this.y<0)
		{
			if(currScore>maxScore)
			{
				maxScore=currScore;
			}
			this.trace=[];
			this.total=1;
			this.x=random(width);
			this.y=random(height);
			this.trace.push(createVector(this.x,this.y));
			currScore=0;
			return;
		}
		for(var i=this.trace.length-1;i>=1;i--)
		{
			if(dist(this.x,this.y,this.trace[i].x,this.trace[i].y)<10)
			{
				if(currScore>maxScore)
			{
				maxScore=currScore;
			}
				this.trace=[];
				this.total=1;
				currScore=0;
				break;
			}
			this.trace[i].x=this.trace[i-1].x;
			this.trace[i].y=this.trace[i-1].y;
		}
		this.trace[0]=createVector(this.x,this.y);
	}
	this.show=function()
	{
		fill(255);
		for(var i=0;i<this.trace.length;i++)
		rect(this.trace[i].x,this.trace[i].y,10,10);
	}
}